
1) / --> general search / forward ..bonus,stay in search more C-g and C-t

2) .  --> any chanracter

3) ?  ---> search backwards

4) \<word boundary\>

5) \(pattern grouping\)

6) [] --> character class i.e [a-zA-Z]

7) [^] ---> negating a class

8) \d \x \o ---> instead of number int/hex/octal  /D,/O,/X --> non-version

9) \l \L \u \U ---> uppercase and lowercase

10) \s --> whitespace chanracter

11) \S --> non-whitespace chanracter

12) /[0-9]\{3} --> quantifier ..any digit repeat 3 times

13) /[0-9]\{2,4} ---> range repeater min,max

14) * ---> zero or more /word*

15) + ---> one or more  /word\+

16) ? --> zero or one  /word\?

17) greedy is absolute like "bad" and it will match only bad and lazy start with a - {-n,m} ex: /fo\{-2,5} then it will show  foo to fooooo

18) Anchors ^ for beginning and $ for ending

19) \n ---> backreference  i.e \1 \2 \3

20) \0 --> whole match example:  %s/[0-9]\+/"\0"

21) zero width :h /zero-width  example : ^ $ \< \>

22) \ze ---> lookahead example: foo\zebar  /foo\(bar\)\@=

23) \zs ---> lookbehind example : bar\zsfoo \@<=  /\(foo\)\@<=bar

24) Lookahead and lookbehind together : /\(foo\)\@<=bar\(baz\)\@=

25) \%[] ---> optional match ,example : /bull%[shit] will match either bull, bullshit

26) \s_  ----> whitespace with newline

27) \v --> very magic , example /\v(foo)+

28) & --> the whole match , example \0 could be replace by this

29) g --> global command , example g/^$/ d

30) \w --> match a word /W --> not match a word
